---
- name: configure proxmox apt repo
  apt_repository: repo='deb http://download.proxmox.com/debian wheezy pve pve-no-subscription'
                  update_cache=no state=present
- name: configure proxmox apt repo (security updates)
  apt_repository: repo='deb http://security.debian.org/ wheezy/updates main contrib'
                  update_cache=no state=present
- name: import proxmox apt key
  apt_key: id=9887F95A url=http://download.proxmox.com/debian/key.asc state=present
- name: disable enterprise repository
  file: path=/etc/apt/sources.list.d/pve-enterprise.list state=absent
- name: install proxmox kernel packages
  apt: pkg={{ item }} state=present update_cache=yes
  with_items:
    - pve-firmware
    - pve-kernel-2.6.32-39-pve  #DO check the latest needed
    - pve-headers-2.6.32-39-pve  #DO check the latest needed
- name: update initramfs
  command: update-initramfs -k all -u
- name: test for active pve kernel
  fail: msg="Please remove all Debian kernel packages (`apt-get purge linux-base \
             linux-image-* linux-headers-*`) and reboot {{ ansible_fqdn }} to \
             load the PVE kernel"
  when: ansible_kernel != '2.6.32-39-pve'  #DO check the latest needed
- name: install PVE packages
  apt: pkg={{ item }} state=present update_cache=yes
  with_items:
    - proxmox-ve-2.6.32
    - ntp
    - ssh
    - lvm2
    - postfix
    - ksm-control-daemon
    - vzprocps
    - open-iscsi
    - bootlogd
    - omping
    - ssmping
- name: ensure enterprise repository is disabled
  file: path=/etc/apt/sources.list.d/pve-enterprise.list state=absent
- name: configure network interfaces
  copy: src=network/interfaces.{{ ansible_fqdn }} dest=/etc/network/interfaces
  notify: restart networking
- name: install drbd
  apt: pkg=drbd8-utils state=present
#- name: configure drbd
#  copy: src=drbd.conf dest=/etc/drbd.conf
- name: configure lvm
  copy: src=lvm.conf dest=/etc/lvm/lvm.conf
#- name: check for completed drbd setup
#  shell: cat /proc/drbd | grep '^ 0:' | grep cs:Connected | grep Primary/Primary | grep UpToDate/UpToDate
#  register: drbd_status
#- name: abort if primary/primary synchronised drbd not detected
#  fail: msg="DRBD setup not completed. Please run `ansible-playbook -i \
#             production.ini drbd-lvm.yml` and ensure the drbd device has \
#             completed syncing before continuing"
#  when: drbd_status.rc > 0
#- name: check for shared volume group
#  command: vgdisplay vg_shared
#  register: vg_status
#- name: abort if volume group not found
#  fail: msg="Shared volume group not found. Please run `ansible-playbook -i \
#             production.ini drbd-lvm.yml` and ensure the vg_shared group is \
#             present and detected before continuing"
#  when: vg_status.rc > 0
